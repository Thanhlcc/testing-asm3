{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-09T18:30:38.862Z",
    "end": "2023-12-09T18:31:33.963Z",
    "duration": 55101,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "41e5930c-1579-4873-abe4-6a95371bf865",
      "title": "",
      "fullFile": "E:\\Software Testing\\Project 3\\testing-asm3\\test\\gradeAssignment.js",
      "file": "\\test\\gradeAssignment.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d176e859-c8da-4674-9fdf-4143c756d2ec",
          "title": "Testing moodle 5 ",
          "fullFile": "E:\\Software Testing\\Project 3\\testing-asm3\\test\\gradeAssignment.js",
          "file": "\\test\\gradeAssignment.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Testing moodle 5 \"",
              "fullTitle": "Testing moodle 5  \"before each\" hook in \"Testing moodle 5 \"",
              "timedOut": false,
              "duration": 28603,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build()\nvars = {}\n/****************** SETUP TEST CASE ******************************/\nawait driver.get(\"https://school.moodledemo.net/login/index.php\")\nawait driver.findElement(By.id(\"username\")).click()\nawait driver.findElement(By.id(\"username\")).sendKeys(\"student\")\nawait driver.findElement(By.id(\"password\")).click()\nawait driver.findElement(By.id(\"password\")).sendKeys(\"moodle\")\nawait driver.findElement(By.id(\"loginbtn\")).click()\nawait driver.wait(until.elementsLocated(By.xpath('(//a[@href=\"https://school.moodledemo.net/course/view.php?id=71\"])')), 5000)\nlet course = await driver.findElement(By.xpath('(//a[@href=\"https://school.moodledemo.net/course/view.php?id=71\"])'))\nawait course.click()\nawait driver.get(\"https://school.moodledemo.net/course/view.php?id=71\")\nawait driver.manage().window().maximize()\n{\n    const elements = await driver.findElements(By.linkText(\"End of course summative assignment\"))\n    assert(elements.length)\n}\nawait driver.findElement(By.linkText(\"End of course summative assignment\")).click()\nawait driver.findElement(By.xpath(\"//section[@id=\\'region-main\\']/div[2]/div/div/div/div/form/button\")).click()\nawait driver.executeScript('window.scrollBy(0, 1000);');\nawait driver.sleep(5000)\nawait driver.switchTo().frame(0)\nconst submitAnswer = await driver.findElement(By.id(\"tinymce\"))\nawait submitAnswer.sendKeys('Submit')\nawait driver.switchTo().defaultContent()\nawait driver.findElement(By.id(\"id_submitbutton\")).click()\nconst toogle = await driver.findElement(By.id(\"user-menu-toggle\"))\nawait toogle.click()\nconst logoutButton = await driver.findElement(By.linkText(\"Log out\"))\nawait logoutButton.click()\nawait driver.findElement(By.linkText(\"Log in\")).click()\nlet teacherLogin = await driver.findElement(By.id(\"username\"))\nawait teacherLogin.clear()\nawait teacherLogin.sendKeys(\"teacher\")\nawait driver.findElement(By.id(\"password\")).click()\nawait driver.findElement(By.id(\"password\")).sendKeys(\"moodle\")\nawait driver.findElement(By.id(\"loginbtn\")).click()",
              "err": {},
              "uuid": "8a7a2013-7daf-4eb7-a1ce-b0d965926b66",
              "parentUUID": "d176e859-c8da-4674-9fdf-4143c756d2ec",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Testing moodle 5 \"",
              "fullTitle": "Testing moodle 5  \"after each\" hook in \"Testing moodle 5 \"",
              "timedOut": false,
              "duration": 2388,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const linkAssignment = await driver.findElement(By.linkText(\"Assignment: End of course summative assignment\"))\nawait linkAssignment.click()\nconst toogle = await driver.findElement(By.id(\"user-menu-toggle\"))\nawait toogle.click()\nconst logoutButton = await driver.findElement(By.linkText(\"Log out\"))\nawait logoutButton.click()\nawait driver.quit();",
              "err": {},
              "uuid": "15d52db0-10a0-48ab-add1-3d6c2cbaf3de",
              "parentUUID": "d176e859-c8da-4674-9fdf-4143c756d2ec",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Testing moodle 5.2 - Alternative flow: Save and show next",
              "fullTitle": "Testing moodle 5  Testing moodle 5.2 - Alternative flow: Save and show next",
              "timedOut": false,
              "duration": 24102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.wait(until.elementsLocated(By.xpath('(//a[@href=\"https://school.moodledemo.net/course/view.php?id=71\"])')), 5000)\n        let course = await driver.findElement(By.xpath('(//a[@href=\"https://school.moodledemo.net/course/view.php?id=71\"])'))\n        await course.click()\n        await driver.get(\"https://school.moodledemo.net/course/view.php?id=71\")\n        await driver.manage().window().maximize()\n        {\n            const elements = await driver.findElements(By.linkText(\"End of course summative assignment\"))\n            assert(elements.length)\n        }\n        await driver.findElement(By.linkText(\"End of course summative assignment\")).click()\n        await driver.findElement(By.linkText(\"View all submissions\")).click()\n        {\n            const elements = await driver.findElements(By.css(\".submissionstatussubmitted\"))\n            assert(elements.length)\n        }\n        await driver.findElement(By.css(\"#mod_assign_grading-1833_r12_c5 > .btn\")).click()\n        await driver.wait(until.elementsLocated(By.id(\"id_grade\")), 5000)\n        let inputGrade = await driver.findElement(By.id(\"id_grade\"))\n        await inputGrade.click()\n        await inputGrade.sendKeys(\"90.00\")\n        await driver.sleep(5000)\n        await driver.executeScript('window.scrollBy(0, 1000);');\n        await driver.switchTo().frame(0)\n        const feedback = await driver.findElement(By.id(\"tinymce\"))\n        await feedback.sendKeys('Good job.')\n        await driver.switchTo().defaultContent()\n        await driver.findElement(By.name(\"saveandshownext\")).click()\n        {\n            const elements = await driver.findElements(By.linkText(\"Not graded\"))\n            assert(elements.length)\n        }\n        await driver.sleep(5000)\n        await driver.wait(until.elementsLocated(By.id(\"id_grade\")), 5000)\n        let inputGrade2nd =  await driver.findElement(By.id(\"id_grade\"))\n        await inputGrade2nd.click()\n        await inputGrade2nd.sendKeys(\"95\")\n        await driver.findElement(By.name(\"savechanges\")).click()\n        await driver.sleep(5000)\n        console.log(\"`set speed` is a no-op in code export, use `pause` instead\")\n        {\n            const elements = await driver.findElements(By.linkText(\"95.00\"))\n            assert(elements.length)\n        }",
              "err": {},
              "uuid": "2448daaa-7fbe-4a3a-b040-b786dafcc60c",
              "parentUUID": "d176e859-c8da-4674-9fdf-4143c756d2ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2448daaa-7fbe-4a3a-b040-b786dafcc60c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24102,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}