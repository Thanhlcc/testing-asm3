{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 8,
    "pending": 0,
    "failures": 2,
    "start": "2023-12-10T03:17:43.180Z",
    "end": "2023-12-10T03:23:01.126Z",
    "duration": 317946,
    "testsRegistered": 10,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1b7ae3a5-b20d-4ff7-8548-c5b402bddade",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "339505d0-0663-40d0-b98c-d7be503035e6",
          "title": "User - Filter Enrolled Participants with chrome",
          "fullFile": "D:\\quyen\\HK231\\Kiểm thử phần mềm\\prj3\\testing-asm3\\test\\filterEnrolledParticipants.js",
          "file": "\\test\\filterEnrolledParticipants.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"User - Filter Enrolled Participants with chrome\"",
              "fullTitle": "User - Filter Enrolled Participants with chrome \"before each\" hook in \"User - Filter Enrolled Participants with chrome\"",
              "timedOut": false,
              "duration": 14989,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(brs).build();\nawait driver.get(\"https://school.moodledemo.net/login/index.php\");\nawait driver.manage().window().maximize();\nawait driver.findElement(By.id(\"username\")).click();\nawait driver.findElement(By.id(\"username\")).sendKeys(\"teacher\");\nawait driver.findElement(By.id(\"password\")).click();\nawait driver.findElement(By.id(\"password\")).sendKeys(\"moodle\");\nawait driver.findElement(By.id(\"loginbtn\")).click();\nawait driver.wait(\n  until.elementLocated(\n    By.xpath(\n      \"//a[@href='https://school.moodledemo.net/course/view.php?id=69']\"\n    )\n  )\n);\nawait driver\n  .findElement(\n    By.xpath(\n      \"//a[@href='https://school.moodledemo.net/course/view.php?id=69']\"\n    )\n  )\n  .click();\nawait driver.wait(until.elementLocated(By.linkText(\"Participants\")));\nawait driver.findElement(By.linkText(\"Participants\")).click();\nawait driver.wait(\n  until.elementLocated(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='join']\"\n    )\n  )\n);",
              "err": {},
              "uuid": "fa45edfb-60c4-4a3c-8bdf-7fa215d35744",
              "parentUUID": "339505d0-0663-40d0-b98c-d7be503035e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"User - Filter Enrolled Participants with chrome\"",
              "fullTitle": "User - Filter Enrolled Participants with chrome \"after each\" hook in \"User - Filter Enrolled Participants with chrome\"",
              "timedOut": false,
              "duration": 3788,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.id(\"user-menu-toggle\")).click();\nawait driver.findElement(By.linkText(\"Log out\")).click();\nawait driver.close();\nawait driver.quit();",
              "err": {},
              "uuid": "7721b2f1-db20-4b95-b4f8-03f5b377f3d8",
              "parentUUID": "339505d0-0663-40d0-b98c-d7be503035e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Basic flow",
              "fullTitle": "User - Filter Enrolled Participants with chrome Basic flow",
              "timedOut": false,
              "duration": 22630,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// joindropdown\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='join']\"\n    )\n  )\n  .click();\nconst joindropdown = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='join']\")\n);\nawait joindropdown.findElement(By.css(\"*[value='2']\")).click();\n// typedropdown\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='type']\"\n    )\n  )\n  .click();\nconst typedropdown = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='type']\")\n);\nawait typedropdown.findElement(By.css(\"*[value='accesssince']\")).click();\n// select li value\nawait driver.wait(\n  until.elementLocated(By.xpath(\"//div[@data-filterregion='value']//span\"))\n);\nawait driver\n  .findElement(By.xpath(\"//div[@data-filterregion='value']//span\"))\n  .click();\nawait driver\n  .findElement(\n    By.xpath(\n      \"//div[@data-filterregion='value']//li[contains(text(), '2 weeks')]\"\n    )\n  )\n  .click();\n// apply\nawait driver\n  .findElement(By.css(\"button[data-filteraction='apply']\"))\n  .click();\nawait driver.sleep(10000);\nawait driver.findElement(By.css(\"a[data-action='showcount']\")).click();\nawait driver.sleep(10000);\nconst arr = await driver.findElements(\n  By.xpath(\n    \"//*[@id=\\\"participants\\\"]//td[contains(text(), 'jeffreysanders199@example.com')]\"\n  )\n);\nif (arr.length != 0) {\n  throw new Error(\"Filter results is wrong.\");\n}\ntry {\n  const available = await driver.findElement(\n    By.xpath(\n      \"//*[@id=\\\"participants\\\"]//td[contains(text(), 'carolynwelch140@example.com')]\"\n    )\n  );\n  assert(available);\n} catch (error) {\n  throw new Error(\"Filter results is wrong.\");\n}",
              "err": {},
              "uuid": "8946879b-9743-4755-8ba2-251fb1c9507d",
              "parentUUID": "339505d0-0663-40d0-b98c-d7be503035e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alternative - Add multiple filters",
              "fullTitle": "User - Filter Enrolled Participants with chrome Alternative - Add multiple filters",
              "timedOut": false,
              "duration": 22775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// joindropdown1\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='join']\"\n    )\n  )\n  .click();\nconst joindropdown1 = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='join']\")\n);\nawait joindropdown1.findElement(By.css(\"*[value='2']\")).click();\n// typedropdown1\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='type']\"\n    )\n  )\n  .click();\nconst typedropdown1 = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='type']\")\n);\nawait typedropdown1.findElement(By.css(\"*[value='accesssince']\")).click();\n// add\nawait driver.findElement(By.css(\"button[data-filteraction='add']\")).click();\n// joindropdown2\nawait driver.wait(\n  until.elementLocated(\n    By.css(\n      \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='join'\"\n    )\n  )\n);\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='join'\"\n    )\n  )\n  .click();\nconst joindropdown2 = await driver.findElement(\n  By.css(\n    \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='join'\"\n  )\n);\nawait joindropdown2.findElement(By.css(\"*[value='2']\")).click();\n// typedropdown2\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='type'\"\n    )\n  )\n  .click();\nconst typedropdown2 = await driver.findElement(\n  By.css(\n    \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='type'\"\n  )\n);\nawait typedropdown2.findElement(By.css(\"*[value='roles']\")).click();\n// select li value\nawait driver.wait(\n  until.elementLocated(\n    By.xpath(\"(//div[@data-filterregion='value'])[2]//span\")\n  )\n);\nawait driver\n  .findElement(By.xpath(\"(//div[@data-filterregion='value'])[2]//span\"))\n  .click();\nawait driver\n  .findElement(\n    By.xpath(\n      \"//div[@data-filterregion='value']//li[contains(text(), 'Student')]\"\n    )\n  )\n  .click();\nawait driver\n  .findElement(By.css(\"button[data-filteraction='apply']\"))\n  .click();\nawait driver.sleep(10000);\nawait driver.findElement(By.css(\"a[data-action='showcount']\")).click();\nawait driver.sleep(10000);\ntry {\n  await driver.findElement(\n    By.xpath(\n      \"//*[@id=\\\"participants\\\"]//td[contains(text(), 'jeffreysanders199@example.com')]\"\n    )\n  );\n  throw new Error(\"Filter results is wrong.\");\n} catch (error) {}\ntry {\n  const available = await driver.findElement(\n    By.xpath(\n      \"//*[@id=\\\"participants\\\"]//td[contains(text(), 'carolynwelch140@example.com')]\"\n    )\n  );\n  assert(available);\n} catch (error) {\n  throw new Error(\"Filter results is wrong.\");\n}",
              "err": {},
              "uuid": "5c06f89a-ffe4-4bd1-a929-b970c708bf49",
              "parentUUID": "339505d0-0663-40d0-b98c-d7be503035e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alternative - No filter being filled",
              "fullTitle": "User - Filter Enrolled Participants with chrome Alternative - No filter being filled",
              "timedOut": false,
              "duration": 10242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const precount = await driver\n  .findElement(\n    By.css(\"#participantsform p[data-region='participant-count']\")\n  )\n  .getText();\nconst prenum = await driver.executeScript(\n  \"return arguments[0].match(/^\\\\d+/);\",\n  precount\n);\nawait driver\n  .findElement(By.css(\"button[data-filteraction='apply']\"))\n  .click();\nawait driver.sleep(10000);\nconst postcount = await driver\n  .findElement(\n    By.css(\"#participantsform p[data-region='participant-count']\")\n  )\n  .getText();\nconst postnum = await driver.executeScript(\n  \"return arguments[0].match(/^\\\\d+/);\",\n  postcount\n);\ntry {\n  assert(prenum[0] === postnum[0]);\n} catch (error) {\n  throw new Error(\"Filter results is wrong.\");\n}",
              "err": {},
              "uuid": "9a0233e0-38ac-4983-8bce-eb5a8eb3ec8f",
              "parentUUID": "339505d0-0663-40d0-b98c-d7be503035e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alternative - No result founded",
              "fullTitle": "User - Filter Enrolled Participants with chrome Alternative - No result founded",
              "timedOut": false,
              "duration": 11958,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// joindropdow\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='join']\"\n    )\n  )\n  .click();\nconst joindropdown = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='join']\")\n);\nawait joindropdown.findElement(By.css(\"*[value='2']\")).click();\n// typedropdown\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='type']\"\n    )\n  )\n  .click();\nconst typedropdown = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='type']\")\n);\nawait typedropdown.findElement(By.css(\"*[value='roles']\")).click();\n// select li value\nawait driver.wait(\n  until.elementLocated(By.xpath(\"//div[@data-filterregion='value']//span\"))\n);\nawait driver\n  .findElement(By.xpath(\"//div[@data-filterregion='value']//span\"))\n  .click();\nawait driver\n  .findElement(\n    By.xpath(\n      \"//div[@data-filterregion='value']//li[contains(text(), 'Guest')]\"\n    )\n  )\n  .click();\n// result\nawait driver\n  .findElement(By.css(\"button[data-filteraction='apply']\"))\n  .click();\nawait driver.sleep(10000);\nconst count = await driver\n  .findElement(\n    By.css(\"#participantsform p[data-region='participant-count']\")\n  )\n  .getText();\nconst num = await driver.executeScript(\n  \"return arguments[0].match(/^\\\\d+/);\",\n  count\n);\ntry {\n  assert(num[0] == 0);\n} catch (error) {\n  throw new Error(\"Filter results is wrong.\");\n}",
              "err": {},
              "uuid": "ef207965-8eba-4d2d-8a8a-238ca4dea94d",
              "parentUUID": "339505d0-0663-40d0-b98c-d7be503035e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Exception - User leaves the sub-field blank",
              "fullTitle": "User - Filter Enrolled Participants with chrome Exception - User leaves the sub-field blank",
              "timedOut": false,
              "duration": 10138,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.css(\"button[data-filteraction='add']\")).click();\nawait driver.sleep(10000);\nawait driver.findElement(\n  By.css(\"div[data-filterregion='filter']:nth-child(2)\")\n);\nconst arr = await driver.findElement(\n  By.css(\"div[data-filterregion='filter']:nth-child(2)\")\n);\nif (arr.length != 0) {\n  throw new Error(\"New filter still being display.\");\n}\ntry {\n  await driver.findElement(By.css(\"div.warning\"));\n} catch (error) {\n  throw new Error(\"No warning being displayed.\");\n}",
              "err": {
                "message": "Error: New filter still being display.",
                "estack": "Error: New filter still being display.\n    at Context.<anonymous> (test\\filterEnrolledParticipants.js:351:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "db5c48c2-9651-4f8d-86cc-707466124878",
              "parentUUID": "339505d0-0663-40d0-b98c-d7be503035e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8946879b-9743-4755-8ba2-251fb1c9507d",
            "5c06f89a-ffe4-4bd1-a929-b970c708bf49",
            "9a0233e0-38ac-4983-8bce-eb5a8eb3ec8f",
            "ef207965-8eba-4d2d-8a8a-238ca4dea94d"
          ],
          "failures": [
            "db5c48c2-9651-4f8d-86cc-707466124878"
          ],
          "pending": [],
          "skipped": [],
          "duration": 77743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "87bbe603-d324-4dff-afa7-d8f6fea5eca6",
          "title": "User - Filter Enrolled Participants with MicrosoftEdge",
          "fullFile": "D:\\quyen\\HK231\\Kiểm thử phần mềm\\prj3\\testing-asm3\\test\\filterEnrolledParticipants.js",
          "file": "\\test\\filterEnrolledParticipants.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"User - Filter Enrolled Participants with MicrosoftEdge\"",
              "fullTitle": "User - Filter Enrolled Participants with MicrosoftEdge \"before each\" hook in \"User - Filter Enrolled Participants with MicrosoftEdge\"",
              "timedOut": false,
              "duration": 12712,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(brs).build();\nawait driver.get(\"https://school.moodledemo.net/login/index.php\");\nawait driver.manage().window().maximize();\nawait driver.findElement(By.id(\"username\")).click();\nawait driver.findElement(By.id(\"username\")).sendKeys(\"teacher\");\nawait driver.findElement(By.id(\"password\")).click();\nawait driver.findElement(By.id(\"password\")).sendKeys(\"moodle\");\nawait driver.findElement(By.id(\"loginbtn\")).click();\nawait driver.wait(\n  until.elementLocated(\n    By.xpath(\n      \"//a[@href='https://school.moodledemo.net/course/view.php?id=69']\"\n    )\n  )\n);\nawait driver\n  .findElement(\n    By.xpath(\n      \"//a[@href='https://school.moodledemo.net/course/view.php?id=69']\"\n    )\n  )\n  .click();\nawait driver.wait(until.elementLocated(By.linkText(\"Participants\")));\nawait driver.findElement(By.linkText(\"Participants\")).click();\nawait driver.wait(\n  until.elementLocated(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='join']\"\n    )\n  )\n);",
              "err": {},
              "uuid": "9020476f-8fa1-4456-b01e-9934ec43a19b",
              "parentUUID": "87bbe603-d324-4dff-afa7-d8f6fea5eca6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"User - Filter Enrolled Participants with MicrosoftEdge\"",
              "fullTitle": "User - Filter Enrolled Participants with MicrosoftEdge \"after each\" hook in \"User - Filter Enrolled Participants with MicrosoftEdge\"",
              "timedOut": false,
              "duration": 2909,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.id(\"user-menu-toggle\")).click();\nawait driver.findElement(By.linkText(\"Log out\")).click();\nawait driver.close();\nawait driver.quit();",
              "err": {},
              "uuid": "e6931a4c-62dc-42e9-aabd-57e8a5214e7b",
              "parentUUID": "87bbe603-d324-4dff-afa7-d8f6fea5eca6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Basic flow",
              "fullTitle": "User - Filter Enrolled Participants with MicrosoftEdge Basic flow",
              "timedOut": false,
              "duration": 22350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// joindropdown\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='join']\"\n    )\n  )\n  .click();\nconst joindropdown = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='join']\")\n);\nawait joindropdown.findElement(By.css(\"*[value='2']\")).click();\n// typedropdown\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='type']\"\n    )\n  )\n  .click();\nconst typedropdown = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='type']\")\n);\nawait typedropdown.findElement(By.css(\"*[value='accesssince']\")).click();\n// select li value\nawait driver.wait(\n  until.elementLocated(By.xpath(\"//div[@data-filterregion='value']//span\"))\n);\nawait driver\n  .findElement(By.xpath(\"//div[@data-filterregion='value']//span\"))\n  .click();\nawait driver\n  .findElement(\n    By.xpath(\n      \"//div[@data-filterregion='value']//li[contains(text(), '2 weeks')]\"\n    )\n  )\n  .click();\n// apply\nawait driver\n  .findElement(By.css(\"button[data-filteraction='apply']\"))\n  .click();\nawait driver.sleep(10000);\nawait driver.findElement(By.css(\"a[data-action='showcount']\")).click();\nawait driver.sleep(10000);\nconst arr = await driver.findElements(\n  By.xpath(\n    \"//*[@id=\\\"participants\\\"]//td[contains(text(), 'jeffreysanders199@example.com')]\"\n  )\n);\nif (arr.length != 0) {\n  throw new Error(\"Filter results is wrong.\");\n}\ntry {\n  const available = await driver.findElement(\n    By.xpath(\n      \"//*[@id=\\\"participants\\\"]//td[contains(text(), 'carolynwelch140@example.com')]\"\n    )\n  );\n  assert(available);\n} catch (error) {\n  throw new Error(\"Filter results is wrong.\");\n}",
              "err": {},
              "uuid": "9bda988c-d8ba-42d0-adec-39ef8b2649c7",
              "parentUUID": "87bbe603-d324-4dff-afa7-d8f6fea5eca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alternative - Add multiple filters",
              "fullTitle": "User - Filter Enrolled Participants with MicrosoftEdge Alternative - Add multiple filters",
              "timedOut": false,
              "duration": 22455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// joindropdown1\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='join']\"\n    )\n  )\n  .click();\nconst joindropdown1 = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='join']\")\n);\nawait joindropdown1.findElement(By.css(\"*[value='2']\")).click();\n// typedropdown1\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='type']\"\n    )\n  )\n  .click();\nconst typedropdown1 = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='type']\")\n);\nawait typedropdown1.findElement(By.css(\"*[value='accesssince']\")).click();\n// add\nawait driver.findElement(By.css(\"button[data-filteraction='add']\")).click();\n// joindropdown2\nawait driver.wait(\n  until.elementLocated(\n    By.css(\n      \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='join'\"\n    )\n  )\n);\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='join'\"\n    )\n  )\n  .click();\nconst joindropdown2 = await driver.findElement(\n  By.css(\n    \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='join'\"\n  )\n);\nawait joindropdown2.findElement(By.css(\"*[value='2']\")).click();\n// typedropdown2\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='type'\"\n    )\n  )\n  .click();\nconst typedropdown2 = await driver.findElement(\n  By.css(\n    \"div[data-filterregion='filter']:nth-child(2) select[data-filterfield='type'\"\n  )\n);\nawait typedropdown2.findElement(By.css(\"*[value='roles']\")).click();\n// select li value\nawait driver.wait(\n  until.elementLocated(\n    By.xpath(\"(//div[@data-filterregion='value'])[2]//span\")\n  )\n);\nawait driver\n  .findElement(By.xpath(\"(//div[@data-filterregion='value'])[2]//span\"))\n  .click();\nawait driver\n  .findElement(\n    By.xpath(\n      \"//div[@data-filterregion='value']//li[contains(text(), 'Student')]\"\n    )\n  )\n  .click();\nawait driver\n  .findElement(By.css(\"button[data-filteraction='apply']\"))\n  .click();\nawait driver.sleep(10000);\nawait driver.findElement(By.css(\"a[data-action='showcount']\")).click();\nawait driver.sleep(10000);\ntry {\n  await driver.findElement(\n    By.xpath(\n      \"//*[@id=\\\"participants\\\"]//td[contains(text(), 'jeffreysanders199@example.com')]\"\n    )\n  );\n  throw new Error(\"Filter results is wrong.\");\n} catch (error) {}\ntry {\n  const available = await driver.findElement(\n    By.xpath(\n      \"//*[@id=\\\"participants\\\"]//td[contains(text(), 'carolynwelch140@example.com')]\"\n    )\n  );\n  assert(available);\n} catch (error) {\n  throw new Error(\"Filter results is wrong.\");\n}",
              "err": {},
              "uuid": "f23b9bc2-f5c8-41e2-b01c-e430f17d9fa7",
              "parentUUID": "87bbe603-d324-4dff-afa7-d8f6fea5eca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alternative - No filter being filled",
              "fullTitle": "User - Filter Enrolled Participants with MicrosoftEdge Alternative - No filter being filled",
              "timedOut": false,
              "duration": 10181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const precount = await driver\n  .findElement(\n    By.css(\"#participantsform p[data-region='participant-count']\")\n  )\n  .getText();\nconst prenum = await driver.executeScript(\n  \"return arguments[0].match(/^\\\\d+/);\",\n  precount\n);\nawait driver\n  .findElement(By.css(\"button[data-filteraction='apply']\"))\n  .click();\nawait driver.sleep(10000);\nconst postcount = await driver\n  .findElement(\n    By.css(\"#participantsform p[data-region='participant-count']\")\n  )\n  .getText();\nconst postnum = await driver.executeScript(\n  \"return arguments[0].match(/^\\\\d+/);\",\n  postcount\n);\ntry {\n  assert(prenum[0] === postnum[0]);\n} catch (error) {\n  throw new Error(\"Filter results is wrong.\");\n}",
              "err": {},
              "uuid": "e43a7f3b-9234-42b4-bfa4-d1ee8dd86a19",
              "parentUUID": "87bbe603-d324-4dff-afa7-d8f6fea5eca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Alternative - No result founded",
              "fullTitle": "User - Filter Enrolled Participants with MicrosoftEdge Alternative - No result founded",
              "timedOut": false,
              "duration": 11739,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// joindropdow\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='join']\"\n    )\n  )\n  .click();\nconst joindropdown = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='join']\")\n);\nawait joindropdown.findElement(By.css(\"*[value='2']\")).click();\n// typedropdown\nawait driver\n  .findElement(\n    By.css(\n      \"div[data-filterregion='filters'] select[data-filterfield='type']\"\n    )\n  )\n  .click();\nconst typedropdown = await driver.findElement(\n  By.css(\"div[data-filterregion='filters'] select[data-filterfield='type']\")\n);\nawait typedropdown.findElement(By.css(\"*[value='roles']\")).click();\n// select li value\nawait driver.wait(\n  until.elementLocated(By.xpath(\"//div[@data-filterregion='value']//span\"))\n);\nawait driver\n  .findElement(By.xpath(\"//div[@data-filterregion='value']//span\"))\n  .click();\nawait driver\n  .findElement(\n    By.xpath(\n      \"//div[@data-filterregion='value']//li[contains(text(), 'Guest')]\"\n    )\n  )\n  .click();\n// result\nawait driver\n  .findElement(By.css(\"button[data-filteraction='apply']\"))\n  .click();\nawait driver.sleep(10000);\nconst count = await driver\n  .findElement(\n    By.css(\"#participantsform p[data-region='participant-count']\")\n  )\n  .getText();\nconst num = await driver.executeScript(\n  \"return arguments[0].match(/^\\\\d+/);\",\n  count\n);\ntry {\n  assert(num[0] == 0);\n} catch (error) {\n  throw new Error(\"Filter results is wrong.\");\n}",
              "err": {},
              "uuid": "8ca1231b-f13e-4efb-954e-43e3f32e4de7",
              "parentUUID": "87bbe603-d324-4dff-afa7-d8f6fea5eca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Exception - User leaves the sub-field blank",
              "fullTitle": "User - Filter Enrolled Participants with MicrosoftEdge Exception - User leaves the sub-field blank",
              "timedOut": false,
              "duration": 10123,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.css(\"button[data-filteraction='add']\")).click();\nawait driver.sleep(10000);\nawait driver.findElement(\n  By.css(\"div[data-filterregion='filter']:nth-child(2)\")\n);\nconst arr = await driver.findElement(\n  By.css(\"div[data-filterregion='filter']:nth-child(2)\")\n);\nif (arr.length != 0) {\n  throw new Error(\"New filter still being display.\");\n}\ntry {\n  await driver.findElement(By.css(\"div.warning\"));\n} catch (error) {\n  throw new Error(\"No warning being displayed.\");\n}",
              "err": {
                "message": "Error: New filter still being display.",
                "estack": "Error: New filter still being display.\n    at Context.<anonymous> (test\\filterEnrolledParticipants.js:351:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8b1e9b4c-431b-4bfe-97ef-36f7eb3c7f5d",
              "parentUUID": "87bbe603-d324-4dff-afa7-d8f6fea5eca6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bda988c-d8ba-42d0-adec-39ef8b2649c7",
            "f23b9bc2-f5c8-41e2-b01c-e430f17d9fa7",
            "e43a7f3b-9234-42b4-bfa4-d1ee8dd86a19",
            "8ca1231b-f13e-4efb-954e-43e3f32e4de7"
          ],
          "failures": [
            "8b1e9b4c-431b-4bfe-97ef-36f7eb3c7f5d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 76848,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}